apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "ru.kartsev.dmitry.cryptorates"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 4
        versionName "0.1.4"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes.each {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        def cryptoApiKey = properties.getProperty("cryptocompare_api_key", "")

        it.buildConfigField 'String', "CRYPTO_API_KEY", cryptoApiKey

        it.resValue 'string', "api_key", cryptoApiKey
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    kapt "com.android.databinding:compiler:$gradle_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.core:core-ktx:$ktx_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "com.google.android.material:material:$material_version"

    implementation "androidx.lifecycle:lifecycle-compiler:$lificycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lificycle_version"
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lificycle_version"

    // Paging library
    implementation "android.arch.paging:runtime:$paging_version"

    implementation "android.arch.persistence.room:rxjava2:$persistance_version"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rxJava_version"

    // RxAndroid
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroid_version"

    // RxKotlin
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlin_version"

    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"

    // Retrofit2
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:adapter-rxjava:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit2_version"
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    // Okhttp3
    implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_interceptor_version"

    // Picasso for Image Loading
    implementation("com.squareup.picasso:picasso:$picassoVersion") {
        exclude group: "com.android.support"
    }

    // Timber
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Koin
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-java:$koin_version"
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-android-scope:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"
    testImplementation "org.koin:koin-test:$koin_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
